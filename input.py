# GUI for inputting walls and starting positions
# Press the Finish button once you're done inputting the walls and starting positions.
# G means goal, p means player, M means Minotaur
# These are the only parameters you need to set
numrows = 13
numcols = 11
dimensions = "1200x800"
# Don't change anything below this line

import tkinter as tk

root = tk.Tk()
root.geometry(dimensions)
pixel = tk.PhotoImage(width=1, height=1)
root.configure(background='grey')

def printAll():
    print("=======================================")
    print("============ Copy and paste these values directly into main.py ==============")
    print("=======================================")
    print("# Code generated by input.py")
    print("numrows =", numrows, ",")
    print("numcols =", numcols, ",")
    for label in all_labels:
        if label.value == "G":
            print("GoalPos = ", repr((label.row, label.col)), ",")
        elif label.value == "p":
            print("PlayerStartPos = ", repr((label.row, label.col)), ",")
        elif label.value == "M":
            print("MinotaurStartPos = ", repr((label.row, label.col)), ",")
    print("Walls = [")
    for wall in walls:
        print(repr(wall) + ",")
    print("],")

finishBtn = tk.Button(root, text="Finish", command=printAll, height=5, width=20)
finishBtn.place(x=900, y=600, in_=root)


walls = set()

def add_or_remove_entry(wall):
    if wall in walls:
        walls.remove(wall)
        print("Removed entry", wall)
        print(walls)
    else:
        walls.add(wall)
        print("Added entry", wall)
        print(walls)


class MyButton:
    def __init__(self, *, root, text, command, width, height, image, row, col, xd, yd, wall):
        self.root = root
        self.text = text
        self.command = command
        self.width, self.height = width, height
        self.row, self.col = row, col
        self.xd, self.yd = xd, yd
        self.image = image
        self.clicked = False
        self.wall = wall

    def CreateButton(self):
        self.button = tk.Button(self.root, text=self.text, command=self.OnClick, height=self.height, width=self.width, image=self.image)
        self.button.place(x=col*50+self.xd, y=row*50+self.yd, in_=self.root)
        self.original_color = self.button.cget("background")

    def OnClick(self):
        self.command()
        UpdateAll()


def UpdateAll():
    for my_label in all_labels:
        my_label.update()
        my_label.label.update()
    for my_button in all_buttons:
        wall = my_button.wall
        if wall in walls:
            my_button.button.config(state = "normal", relief="raised",bg="black", activebackground='black')
        else:
            my_button.button.config(state = "normal", relief="raised",bg=my_button.original_color, activebackground=my_button.original_color)
        my_button.button.update()


all_labels = []
all_buttons = []

class MyLabel:
    def __init__(self, *, root, value, row, col):
        self.value = value
        self.root = root
        self.row, self.col = row, col

    def CreateLabel(self):
        self.label = tk.Label(self.root,text=self.value, font=('Times New Roman', 15, 'bold'), bg="white")
        self.label.bind("<Button-1>", self.OnClick)
        self.label.place(x=self.col*50, y=self.row*50, width=34, height=34)

    def update(self):
        self.label.config(text=self.value)

    def OnClick(self, event):
        if self.value == "":
            self.value = "G"
        elif self.value == "G":
            self.value = "M"
        elif self.value == "M":
            self.value = "p"
        elif self.value == "p":
            self.value = ""
        UpdateAll()






for row in range(numrows):
    for col in range(numcols):
        def right_vertical_func(x, y):
            def temp():
                add_or_remove_entry(((x, y), (x, y+1)))
            return temp

        def bottom_horizontal_func(x, y):
            def temp():
                add_or_remove_entry(((x, y), (x+1, y)))
            return temp


        new_label = MyLabel(root=root, value="", row=row, col=col)
        new_label.CreateLabel()
        all_labels.append(new_label)

        wall = ((row, col), (row, col+1))
        right_vertical_button = MyButton(root=root, text="", command=right_vertical_func(row, col), height=32, width=10, image=pixel, row=row, col=col, xd=32, yd= 0, wall = wall)
        right_vertical_button.CreateButton()
        all_buttons.append(right_vertical_button)

        wall = ((row, col), (row+1, col))
        down_horizontal_button = MyButton(root=root, text="", command=bottom_horizontal_func(row, col), height=10, width=32, image=pixel, row=row, col=col, xd=0, yd=32, wall=wall)
        down_horizontal_button.CreateButton()
        all_buttons.append(down_horizontal_button)



root.mainloop()
